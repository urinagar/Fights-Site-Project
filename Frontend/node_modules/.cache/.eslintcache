[{"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\index.tsx":"1","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\InterceptorsService.ts":"3","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\SocketIOService.ts":"4","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\LayoutArea\\Layout\\Layout.tsx":"5","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Redux\\Store.ts":"6","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Redux\\VacationsState.ts":"7","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Utils\\config.ts":"8","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\LayoutArea\\Footer\\Footer.tsx":"9","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\LayoutArea\\Header\\Header.tsx":"10","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\LayoutArea\\Router\\Router.tsx":"11","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\AuthArea\\AuthMenu\\AuthMenu.tsx":"12","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Redux\\AuthState.ts":"13","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\AuthArea\\Login\\Login.tsx":"14","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\AuthArea\\Register\\Register.tsx":"15","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\AuthArea\\Logout\\Logout.tsx":"16","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\VacationArea\\BarChart\\BarChart.tsx":"17","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\VacationArea\\DeleteVacation\\DeleteVacation.tsx":"18","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\HomeArea\\Home\\Home.tsx":"19","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\VacationArea\\AddVacation\\AddVacation.tsx":"20","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\VacationArea\\UpdateVacation\\UpdateVacation.tsx":"21","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\AuthService.ts":"22","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\NotifyfService.ts":"23","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\VacationsService.ts":"24","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\HomeArea\\VacationsList\\VacationsList.tsx":"25","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\HomeArea\\AdminVacationCard\\AdminVacationCard.tsx":"26","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\HomeArea\\VacationCard\\VacationCard.tsx":"27","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Models\\RoleModel.ts":"28"},{"size":846,"mtime":1646422576263,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":554,"mtime":1645801847966,"results":"32","hashOfConfig":"30"},{"size":891,"mtime":1647021080210,"results":"33","hashOfConfig":"30"},{"size":1059,"mtime":1647018598132,"results":"34","hashOfConfig":"30"},{"size":250,"mtime":1645876137804,"results":"35","hashOfConfig":"30"},{"size":2155,"mtime":1645876363442,"results":"36","hashOfConfig":"30"},{"size":1097,"mtime":1648232599833,"results":"37","hashOfConfig":"30"},{"size":375,"mtime":1646989590626,"results":"38","hashOfConfig":"30"},{"size":351,"mtime":1646945317138,"results":"39","hashOfConfig":"30"},{"size":2633,"mtime":1646999531302,"results":"40","hashOfConfig":"30"},{"size":1579,"mtime":1645812282132,"results":"41","hashOfConfig":"30"},{"size":1715,"mtime":1645801723376,"results":"42","hashOfConfig":"30"},{"size":2709,"mtime":1647020059150,"results":"43","hashOfConfig":"30"},{"size":4331,"mtime":1648300187155,"results":"44","hashOfConfig":"30"},{"size":471,"mtime":1646932123904,"results":"45","hashOfConfig":"30"},{"size":2241,"mtime":1647264235776,"results":"46","hashOfConfig":"30"},{"size":494,"mtime":1647021033162,"results":"47","hashOfConfig":"30"},{"size":1033,"mtime":1647018198192,"results":"48","hashOfConfig":"30"},{"size":5381,"mtime":1647021918800,"results":"49","hashOfConfig":"30"},{"size":5896,"mtime":1647021911380,"results":"50","hashOfConfig":"30"},{"size":989,"mtime":1645814038093,"results":"51","hashOfConfig":"30"},{"size":859,"mtime":1645863493583,"results":"52","hashOfConfig":"30"},{"size":3789,"mtime":1647021092531,"results":"53","hashOfConfig":"30"},{"size":1738,"mtime":1648299349713,"results":"54","hashOfConfig":"30"},{"size":2779,"mtime":1648299642601,"results":"55","hashOfConfig":"30"},{"size":3066,"mtime":1647020954992,"results":"56","hashOfConfig":"30"},{"size":79,"mtime":1645800666732,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iayf4n",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\InterceptorsService.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\SocketIOService.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\LayoutArea\\Layout\\Layout.tsx",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Redux\\Store.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Redux\\VacationsState.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Utils\\config.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\LayoutArea\\Footer\\Footer.tsx",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\LayoutArea\\Header\\Header.tsx",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\LayoutArea\\Router\\Router.tsx",["150"],[],"import { useEffect, useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router\";\nimport { Unsubscribe } from \"redux\";\nimport UserModel from \"../../../Models/UserModel\";\nimport VacationModel from \"../../../Models/VacationModel\";\nimport { authStore, vacationsStore } from \"../../../Redux/Store\";\nimport Login from \"../../AuthArea/Login/Login\";\nimport Logout from \"../../AuthArea/Logout/Logout\";\nimport Register from \"../../AuthArea/Register/Register\";\nimport Home from \"../../HomeArea/Home/Home\";\nimport AddVacation from \"../../VacationArea/AddVacation/AddVacation\";\nimport BarChart from \"../../VacationArea/BarChart/BarChart\";\nimport DeleteVacation from \"../../VacationArea/DeleteVacation/DeleteVacation\";\nimport UpdateVacation from \"../../VacationArea/UpdateVacation/UpdateVacation\";\n\nfunction Router(): JSX.Element {\n    const [user, setUser] = useState<UserModel>(authStore.getState().user);\n    \n    const unsubscribeMe: Unsubscribe = authStore.subscribe(() => {\n        setUser(authStore.getState().user);\n    });\n\n    const [vacations, setVacations] = useState<VacationModel[]>(vacationsStore.getState().vacations);\n    \n    const unsubscribeMeVacations: Unsubscribe = vacationsStore.subscribe(() => {\n        setVacations(vacationsStore.getState().vacations);\n    });\n\n    useEffect( () => {\n        return () => {\n            setUser(undefined);\n            unsubscribeMe();\n            unsubscribeMeVacations();\n        }\n    }, []);\n\n    return (\n\t\t\t<Routes>\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/register\" element={<Register />} />\n                <Route path=\"/logout\" element={<Logout />} />\n                <Route path=\"/home\" element={user ? <Home /> : <Navigate to=\"/login\" />} />\n\n                {user && <Route path=\"/vacations-graph\" element = {user.role === \"Admin\"? <BarChart vacations={vacations} /> : <Navigate to=\"/home\" /> } />}\n                {user && <Route path=\"/add-vacation\" element = {user.role === \"Admin\"? <AddVacation /> : <Navigate to=\"/home\" /> } />}\n                {user && <Route path=\"/edit-vacation\" element = {user.role === \"Admin\"? <UpdateVacation /> : <Navigate to=\"/home\" /> } />}\n                {user && <Route path=\"/delete-vacation/:vacationId\" element = {user.role === \"Admin\"? <DeleteVacation /> : <Navigate to=\"/home\" /> } />}\n                \n                <Route path=\"/\" element={user ? <Navigate to=\"/home\" /> : <Navigate to=\"/login\" />}  />\n                <Route path=\"*\" element={user ? <Navigate to=\"/home\" /> : <Navigate to=\"/login\" />} />\n\n            </Routes>\n    );\n}\n\nexport default Router;\n","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\AuthArea\\AuthMenu\\AuthMenu.tsx",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Redux\\AuthState.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\AuthArea\\Login\\Login.tsx",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\AuthArea\\Register\\Register.tsx",["151"],[],"import { Button, ButtonGroup } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport Role from \"../../../Models/RoleModel\";\nimport UserModel from \"../../../Models/UserModel\";\nimport authService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyfService\";\nimport \"./Register.css\";\n\nfunction Register(): JSX.Element {\n    const navigator = useNavigate()\n    const {register, handleSubmit, formState} = useForm<UserModel>();\n\n    async function submit(user: UserModel){\n        try{\n            await authService.register(user);\n            notifyService.success(\"Registered Successfully\");\n            navigator(\"/home\");\n        }\n        catch(err: any){\n            notifyService.error(err);\n        }\n    }\n\n    return (\n        <div className=\"Register\">\n            <div>\n                <header>\n                    <h1>Let the journey begin</h1>\n                </header>\n                <form onSubmit={handleSubmit(submit)}>\n                    <div className=\"inputContainer\">\n                        <label >First Name</label>\n                        <input type=\"text\" name=\"firstName\" {...register(\"firstName\", {\n                        required: { value: true, message: \"Missing first name\" },\n                        validate: {value: firstName => firstName.trim().length !== 0 || \"Please enter username\"},                            \n                        minLength: { value: 3, message: \"First name must be minimum 3 chars\" },\n                        maxLength: { value: 50, message: \" First name can't exceed 50 chars\" }\n                        })}/>\n                    <span>{formState.errors.firstName?.message}</span>\n\n                    </div>\n                    <div className=\"inputContainer\">\n                        <label >Last Name</label>\n                        <input type=\"text\" name=\"lastName\" {...register(\"lastName\", {\n                        required: { value: true, message: \"Missing last name\" },\n                        validate: {value: lastName => lastName.trim().length !== 0 || \"Please enter username\"},                            \n                        minLength: { value: 3, message: \"Last name must be minimum 3 chars\" },\n                        maxLength: { value: 50, message: \" Last name can't exceed 50 chars\" }\n                        })}/>\n                    <span>{formState.errors.lastName?.message}</span>\n\n                    </div>\n                    <div className=\"inputContainer\">\n                        <label >Username</label>\n                        <input type=\"text\" name=\"username\" {...register(\"username\", {\n                        required: { value: true, message: \"Missing username\" },\n                        validate: {value: username => username.trim().length !== 0 || \"Please enter username\"},                            \n                        minLength: { value: 3, message: \"Username must be minimum 3 chars\" },\n                        maxLength: { value: 50, message: \" Username can't exceed 50 chars\" }\n                        })}/>\n                    <span>{formState.errors.username?.message}</span>\n\n                    </div>\n                    <div className=\"inputContainer\" >\n                        <label >Password</label>\n                        <input type=\"password\" name=\"password\" {...register(\"password\", {\n                        required: { value: true, message: \"Missing passowrd\" },\n                        validate: {value: password => password.trim().length !== 0 || \"Please enter username\"},                            \n                        minLength: { value: 3, message: \"Password must be minimum 3 chars\" },\n                        maxLength: { value: 20, message: \" Password can't exceed 20 chars\" }\n                        })}/>\n                    <span>{formState.errors.password?.message}</span>\n\n                    </div>\n                    <ButtonGroup className=\"BtnGroup\">\n                        <Button variant=\"contained\" color=\"warning\" type=\"reset\">Clear</Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">Register</Button>\n                    </ButtonGroup>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;\n","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\AuthArea\\Logout\\Logout.tsx",["152"],[],"import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyfService\";\n\nfunction Logout(): JSX.Element {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        authService.logout();\n        notifyService.success(\"Logout Successfully\");       \n        navigate(\"/login\");\n    }, []);\n\n    return null;\n}\n\n\nexport default Logout;\n","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\VacationArea\\BarChart\\BarChart.tsx",["153"],[],"import VacationModel from \"../../../Models/VacationModel\";\nimport { VictoryAxis, VictoryBar, VictoryChart, VictoryLabel, VictoryTheme, VictoryTooltip  } from 'victory';\nimport \"./BarChart.css\";\nimport { useEffect, useState } from \"react\";\n\ninterface BarChartProps {\n\tvacations: VacationModel[];\n}\n\nfunction BarChart(props: BarChartProps): JSX.Element {\n    const [data,setData] = useState<any>();\n\n    useEffect(() => {\n        let vacations: VacationModel[] = props.vacations;\n        \n        if(vacations.length > 0) localStorage.setItem(\"chartVacations\",JSON.stringify(vacations));\n        else vacations = JSON.parse(localStorage.getItem(\"chartVacations\"));\n        \n        const tempData: any = [];\n        vacations.forEach(v => v.followersCount > 0 && tempData.push({destination: v.vacationId, followers: v.followersCount, label: v.destination}));\n        setData(tempData);  \n        \n        \n    }, []);\n\n    return (\n        <div className=\"BarChart\">\n            \n            <VictoryChart theme={VictoryTheme.material} domainPadding={40} width={900}>\n                <VictoryLabel\n                    text={`Followers Per Vacation`}\n                    x={450}\n                    y={18}\n                    textAnchor=\"middle\"\n                    style={{  fontSize: 25 }}\n                />\n                <VictoryAxis tickFormat={x => x} />\n\n                <VictoryLabel\n                    text={`Vacation ID`}\n                    x={450}\n                    y={340}\n                    textAnchor=\"middle\"\n                    style={{  fontSize: 15 }}\n                />\n\n                <VictoryAxis\n                    dependentAxis\n                    tickFormat={x => x}\n                    \n                />\n\n                <VictoryLabel\n                    text={`Followers Count`}\n                    angle={-90}\n                    x={15}\n                    y={180}\n                    textAnchor=\"middle\"\n                    style={{  fontSize: 15 }}\n                />\n                \n                <VictoryBar data={data} x=\"destination\" y=\"followers\" barRatio={0.2} labelComponent={<VictoryTooltip />}/>\n                \n            </VictoryChart>\n\n        </div>\n    );\n}\n\nexport default BarChart;\n","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\VacationArea\\DeleteVacation\\DeleteVacation.tsx",["154"],[],"import { useEffect } from \"react\";\nimport {  useNavigate, useParams } from \"react-router-dom\";\nimport vacationsService from \"../../../Services/VacationsService\";\n\nfunction DeleteVacation(): JSX.Element {\n    const vacationId = +useParams().vacationId;\n    const navigate = useNavigate();\n    \n    \n    useEffect((async () => {\n        await vacationsService.deleteVacation(vacationId);\n        navigate(\"/home\");\n    })as any, []);\n\n\n    return null;\n        \n}\n\nexport default DeleteVacation;\n","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\HomeArea\\Home\\Home.tsx",["155","156","157","158"],[],"import { useNavigate } from \"react-router-dom\";\nimport { AuthState } from \"../../../Redux/AuthState\";\nimport { vacationsStore } from \"../../../Redux/Store\";\nimport VacationsList from \"../VacationsList/VacationsList\";\nimport \"./Home.css\";\n\nfunction Home(): JSX.Element {\n    const loggedUser = new AuthState();\n    const navigate = useNavigate();\n    \n    function handleClick(): void{\n        navigate(\"/add-vacation\");\n    }\n    function handleClickGraph(): void {\n        localStorage.setItem(\"chartVacations\", JSON.stringify(vacationsStore.getState().vacations)); \n        navigate(\"/vacations-graph\");\n\n    }\n    return (\n        <div className=\"Home\">\n            <hr />\n\n            <main>\n               \n                {loggedUser.user.role === \"Admin\" && <span><a className=\"Graph\" onClick={handleClickGraph}></a></span>}\n                {loggedUser.user.role === \"Admin\" && <span><a onClick={handleClick}></a></span>}\n   \n                <VacationsList />\n            </main>\n        </div>\n    );\n}\n\nexport default Home;\n","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\VacationArea\\AddVacation\\AddVacation.tsx",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\VacationArea\\UpdateVacation\\UpdateVacation.tsx",["159"],[],"import { Button, ButtonGroup } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport VacationModel from \"../../../Models/VacationModel\";\nimport vacationsService from \"../../../Services/VacationsService\";\nimport config from \"../../../Utils/config\";\nimport \"./UpdateVacation.css\";\n\n\nfunction  UpdateVacation(): JSX.Element {\n    const navigate = useNavigate();\n    const [vacation, setVacation] = useState<VacationModel>(JSON.parse(localStorage.getItem(\"vacation\")));\n    \n    const {register, handleSubmit, formState} = useForm<VacationModel>({\n        defaultValues: {\n            vacationId: vacation?.vacationId,\n            description: vacation?.description,\n            destination: vacation?.destination,\n            startingDate: new Date(vacation.startingDate).toISOString().substring(0,16),\n            endingDate: new Date(vacation.endingDate).toISOString().substring(0,16),\n            price: vacation?.price,\n        }\n    });    \n    function handleClick(): void {\n        navigate(\"/home\");\n    }\n\n    async function submit(updatedVacation: VacationModel): Promise<void>{\n        updatedVacation.startingDate += \":00.000Z\";\n        updatedVacation.endingDate += \":00.000Z\";\n        updatedVacation.followersCount = vacation.followersCount\n        await vacationsService.updateVacation(updatedVacation);\n        navigate(\"/home\");\n    }\n    return (\n        <div className=\"UpdateVacation\" >\n\n            <form autoComplete=\"off\" onSubmit={handleSubmit(submit)} style={{background: `rgba(0, 0, 0, 0.515) url(${config.urls.vacationsImages + vacation.imageName})`}}>\n                \n                <h2>Edit Vacation</h2>\n\n                <button onClick={handleClick} className=\"BackBtn\"><i className=\"fa fa-arrow-right \" aria-hidden=\"true\"></i></button>\n\n                <div>\n                    <label>Description</label>\n                    <br />\n                    <textarea style={formState.errors.description?.message && {border: \" 1px solid red\"}} {...register(\"description\", {\n                        validate: {value: description => description.trim().length !== 0 || \"Please enter description\"},\n                        required: {value: true, message:\"Please enter description\"},\n                        minLength: {value: 40, message:\"Description most be at list 40 letters\"},\n                        maxLength: {value: 500, message:\"Description most be at most 500 letters\"},\n                    })} />\n                    <span>{formState.errors.description?.message}</span>\n                </div>\n                \n                <div>\n                    <label>Destination</label>\n                    <br />\n                    <input type=\"text\" style={formState.errors.destination?.message && {border: \" 1px solid red\"}} placeholder=\"City, Country\" {...register(\"destination\", {\n                        validate: {value: destination => destination.trim().length !== 0 || \"Please enter destination\"},\n                        required: {value: true, message:\"Please enter destination\"},\n                        pattern: {value:/.*, .*$/, message: \"Please use correct pattern (City, Country)\"},\n                        minLength: {value: 10, message:\"destination most be at list 10 letters\"},\n                        maxLength: {value: 50, message:\"destination most be at most 50 letters\"},\n                    })} />\n                    <span>{formState.errors.destination?.message}</span>\n                </div>\n                              \n                <div>\n                    <label>Price</label>\n                    <br />\n                    <input type=\"number\" style={formState.errors.price?.message && {border: \" 1px solid red\"}}  {...register(\"price\", {\n                        required: {value: true, message:\"Please enter price\"},\n                        min: {value: 1, message: \" Price most be greater then zero\"},\n                        max: {value: 20000, message: \" Price cant exceed 20000\"},\n                        minLength: {value: 10, message:\"destination most be at list 10 letters\"},\n                        maxLength: {value: 50, message:\"destination most be at most 50 letters\"},\n                        valueAsNumber: true,\n                    })} />\n                    <span>{formState.errors.price?.message}</span>\n                </div>\n\n                <div>\n                    <label>Starting Date</label>\n                    <br />\n                    <input type=\"datetime-local\" style={formState.errors.startingDate?.message && {border: \" 1px solid red\"}} {...register(\"startingDate\", {\n                        required: {value: true, message:\"Please enter starting date\"}\n                    })} />\n                    <span>{formState.errors.startingDate?.message}</span>\n                </div>\n\n                <div>\n                    <label>Ending Date</label>\n                    <br />\n                    <input type=\"datetime-local\" style={formState.errors.endingDate?.message && {border: \" 1px solid red\"}} {...register(\"endingDate\", {\n                        required: {value: true, message:\"Please enter ending date\"}\n                    })} />\n                    <span>{formState.errors.endingDate?.message}</span>\n                </div>\n\n                <div>\n                    <label>Image</label>\n                    <br />\n                    <input type=\"file\" accept=\"image/*\" {...register(\"image\")} />\n                </div>\n\n                <ButtonGroup className=\"BtnGroup\">\n                        <Button variant=\"contained\" className=\"ResetBtn\"  type=\"reset\">Clear</Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\"> Submit</Button>\n                </ButtonGroup>\n            </form>          \n        </div>\n    );\n}\n\nexport default UpdateVacation;\n","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\AuthService.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\NotifyfService.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Services\\VacationsService.ts",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\HomeArea\\VacationsList\\VacationsList.tsx",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\HomeArea\\AdminVacationCard\\AdminVacationCard.tsx",[],[],"C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Components\\HomeArea\\VacationCard\\VacationCard.tsx",["160","161"],[],"import { useEffect, useState } from \"react\";\nimport VacationModel from \"../../../Models/VacationModel\";\nimport { AuthState } from \"../../../Redux/AuthState\";\nimport vacationsService from \"../../../Services/VacationsService\";\nimport config from \"../../../Utils/config\";\nimport \"./VacationCard.css\";\n\ninterface VacationCardProps {\n\tvacation: VacationModel;\n}\n\nfunction VacationCard(props: VacationCardProps): JSX.Element {\n\n    const loggedUser = new AuthState();\n    const [wishlist, setWishlist] = useState<string>(\"\");\n    const [heart, setHeart] = useState<string>(\"\");\n\n    useEffect((async () => {\n        \n        \n        const isFollowing = await vacationsService.isFollowing(props.vacation.vacationId,loggedUser.user.id);\n        if(isFollowing) {\n            setWishlist(\"Remove From Wishlist\");\n            setHeart(\"fa fa-heart\");\n        }\n        else {\n            setWishlist(\"Add To Wishlist\");\n            setHeart(\"fa fa-heart-o\");\n        }\n    })as any,[props.vacation.followersCount]);\n    \n    const handleClick = async () => {\n        await vacationsService.addFollower(props.vacation.vacationId,loggedUser.user.id);  \n    };\n    \n    return (\n    <div className=\"VacationCard\">\n        <div className=\"Container\">  \n            <div className=\"ProductDetails\">\n\n                <h1>{props.vacation.destination}</h1>                \n                <p className=\"Information\">{props.vacation.description}</p>        \n                    \n                <div className=\"Control\"> \n                    <button className=\"Btn\" onClick={handleClick}>\n                        <span className=\"Price\">${props.vacation.price}</span>\n                        <span className=\"Heart\">{props.vacation.followersCount + \" \"}<i className={heart} aria-hidden=\"true\"></i></span>\n                        <span className=\"Follow\">{wishlist}</span>\n                    </button>         \n                </div>       \n            </div>\n            \n            <div className=\"ProductImage\">\n            \n            <img src={config.urls.vacationsImages + props.vacation.imageName} alt=\"\" />\n            \n            <div className=\"Info\">\n                <h2>Information</h2>\n                <ul>\n                    <li>Starting Date : {new Date(props.vacation.startingDate).toLocaleString()} </li>\n                    <li>Ending Date :  {new Date(props.vacation.endingDate).toLocaleString()} </li>                 \n                </ul>\n            </div>\n            </div>\n        </div>\n    </div>\n     );\n}\n\nexport default VacationCard;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{/* <div className=\"VacationCard\">\n        <div>\n            <h3></h3>\n            <br />\n            Price: ${props.vacation.price}\n            <br />\n            Starting Date: {new Date(props.vacation.startingDate).toLocaleString()}\n            <br />\n            Ending Date: {new Date(props.vacation.endingDate).toLocaleString()}\n            <br />\n        </div>\n        <div>\n            <img src={config.urls.vacationsImages + props.vacation.imageName} />\n        </div>\n    </div> */}","C:\\Users\\user\\Desktop\\web development\\Lessons + Homework\\Third Project\\Fullstack\\Frontend\\src\\Models\\RoleModel.ts",[],[],{"ruleId":"162","severity":1,"message":"163","line":35,"column":8,"nodeType":"164","endLine":35,"endColumn":10,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":12},{"ruleId":"162","severity":1,"message":"170","line":13,"column":8,"nodeType":"164","endLine":13,"endColumn":10,"suggestions":"171"},{"ruleId":"162","severity":1,"message":"172","line":24,"column":8,"nodeType":"164","endLine":24,"endColumn":10,"suggestions":"173"},{"ruleId":"162","severity":1,"message":"174","line":10,"column":5,"nodeType":"168","endLine":10,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":25,"column":60,"nodeType":"177","endLine":25,"endColumn":108},{"ruleId":"178","severity":1,"message":"179","line":25,"column":60,"nodeType":"177","endLine":25,"endColumn":108},{"ruleId":"175","severity":1,"message":"176","line":26,"column":60,"nodeType":"177","endLine":26,"endColumn":85},{"ruleId":"178","severity":1,"message":"179","line":26,"column":60,"nodeType":"177","endLine":26,"endColumn":85},{"ruleId":"166","severity":1,"message":"180","line":13,"column":22,"nodeType":"168","messageId":"169","endLine":13,"endColumn":33},{"ruleId":"162","severity":1,"message":"174","line":18,"column":5,"nodeType":"168","endLine":18,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":93,"column":1,"nodeType":"183","messageId":"184","endLine":107,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'unsubscribeMe' and 'unsubscribeMeVacations'. Either include them or remove the dependency array.","ArrayExpression",["185"],"@typescript-eslint/no-unused-vars","'Role' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'props.vacations'. Either include it or remove the dependency array.",["187"],"React Hook useEffect received a function whose dependencies are unknown. Pass an inline function instead.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'setVacation' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [unsubscribeMe, unsubscribeMeVacations]",{"range":"194","text":"195"},"Update the dependencies array to be: [navigate]",{"range":"196","text":"197"},"Update the dependencies array to be: [props.vacations]",{"range":"198","text":"199"},[1457,1459],"[unsubscribeMe, unsubscribeMeVacations]",[421,423],"[navigate]",[911,913],"[props.vacations]"]