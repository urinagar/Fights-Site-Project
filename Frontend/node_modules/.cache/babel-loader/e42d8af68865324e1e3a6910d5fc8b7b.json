{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nexport class AuthState {\n  constructor() {\n    this.token = null;\n    this.user = null;\n    this.token = localStorage.getItem(\"token\");\n\n    if (this.token) {\n      const decodedData = jwtDecode(this.token);\n      this.user = decodedData.user;\n    }\n  }\n\n}\nexport let AuthActionType;\n\n(function (AuthActionType) {\n  AuthActionType[\"Register\"] = \"Register\";\n  AuthActionType[\"Login\"] = \"Login\";\n  AuthActionType[\"Logout\"] = \"Logout\";\n})(AuthActionType || (AuthActionType = {}));\n\nexport class AuthAction {\n  constructor() {\n    this.type = void 0;\n    this.payload = void 0;\n  }\n\n}\nexport function registerAction(token) {\n  return {\n    type: AuthActionType.Register,\n    payload: token\n  };\n}\nexport function loginAction(token) {\n  return {\n    type: AuthActionType.Login,\n    payload: token\n  };\n}\nexport function logoutAction() {\n  return {\n    type: AuthActionType.Logout\n  };\n}\nexport function authReducer() {\n  let currentAuthState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new AuthState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newAuthState = { ...currentAuthState\n  };\n\n  switch (action.type) {\n    case AuthActionType.Register:\n    case AuthActionType.Login:\n      newAuthState.token = action.payload;\n      const decodedData = jwtDecode(newAuthState.token);\n      newAuthState.user = decodedData.user;\n      localStorage.setItem(\"token\", newAuthState.token);\n      break;\n\n    case AuthActionType.Logout:\n      newAuthState.token = null;\n      newAuthState.user = null;\n      localStorage.removeItem(\"token\");\n      break;\n  }\n\n  return newAuthState;\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/web development/Lessons + Homework/Third Project/Fullstack/Frontend/src/Redux/AuthState.ts"],"names":["jwtDecode","AuthState","constructor","token","user","localStorage","getItem","decodedData","AuthActionType","AuthAction","type","payload","registerAction","Register","loginAction","Login","logoutAction","Logout","authReducer","currentAuthState","action","newAuthState","setItem","removeItem"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAGA,OAAO,MAAMC,SAAN,CAAgB;AAIZC,EAAAA,WAAW,GAAE;AAAA,SAHbC,KAGa,GAHG,IAGH;AAAA,SAFbC,IAEa,GAFK,IAEL;AAChB,SAAKD,KAAL,GAAaE,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;;AACA,QAAG,KAAKH,KAAR,EAAe;AACX,YAAMI,WAAW,GAAGP,SAAS,CAAC,KAAKG,KAAN,CAA7B;AACA,WAAKC,IAAL,GAAaG,WAAD,CAAqBH,IAAjC;AACH;AACJ;;AAVkB;AAavB,WAAYI,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAMZ,OAAO,MAAMC,UAAN,CAAiB;AAAA;AAAA,SACpBC,IADoB;AAAA,SAEpBC,OAFoB;AAAA;;AAAA;AAKxB,OAAO,SAASC,cAAT,CAAwBT,KAAxB,EAAmD;AACtD,SAAO;AAAEO,IAAAA,IAAI,EAAEF,cAAc,CAACK,QAAvB;AAAiCF,IAAAA,OAAO,EAAER;AAA1C,GAAP;AACH;AACD,OAAO,SAASW,WAAT,CAAqBX,KAArB,EAAgD;AACnD,SAAO;AAAEO,IAAAA,IAAI,EAAEF,cAAc,CAACO,KAAvB;AAA8BJ,IAAAA,OAAO,EAAER;AAAvC,GAAP;AACH;AACD,OAAO,SAASa,YAAT,GAAoC;AACvC,SAAO;AAAEN,IAAAA,IAAI,EAAEF,cAAc,CAACS;AAAvB,GAAP;AACH;AAED,OAAO,SAASC,WAAT,GAAmG;AAAA,MAA9EC,gBAA8E,uEAAhD,IAAIlB,SAAJ,EAAgD;AAAA,MAA/BmB,MAA+B;AAEtG,QAAMC,YAAY,GAAG,EAAE,GAAGF;AAAL,GAArB;;AAEA,UAAOC,MAAM,CAACV,IAAd;AAEI,SAAKF,cAAc,CAACK,QAApB;AACA,SAAKL,cAAc,CAACO,KAApB;AACIM,MAAAA,YAAY,CAAClB,KAAb,GAAqBiB,MAAM,CAACT,OAA5B;AACA,YAAMJ,WAAW,GAAGP,SAAS,CAACqB,YAAY,CAAClB,KAAd,CAA7B;AACAkB,MAAAA,YAAY,CAACjB,IAAb,GAAqBG,WAAD,CAAqBH,IAAzC;AACAC,MAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA8BD,YAAY,CAAClB,KAA3C;AACA;;AAEJ,SAAKK,cAAc,CAACS,MAApB;AACII,MAAAA,YAAY,CAAClB,KAAb,GAAqB,IAArB;AACAkB,MAAAA,YAAY,CAACjB,IAAb,GAAoB,IAApB;AACAC,MAAAA,YAAY,CAACkB,UAAb,CAAwB,OAAxB;AACA;AAdR;;AAkBA,SAAOF,YAAP;AACH","sourcesContent":["import jwtDecode from \"jwt-decode\";\r\nimport UserModel from \"../Models/UserModel\";\r\n\r\nexport class AuthState {\r\n    public token: string = null;\r\n    public user: UserModel = null;\r\n\r\n    public constructor(){\r\n        this.token = localStorage.getItem(\"token\");\r\n        if(this.token) {\r\n            const decodedData = jwtDecode(this.token);\r\n            this.user = (decodedData as any).user;\r\n        }   \r\n    }\r\n}\r\n\r\nexport enum AuthActionType {\r\n    Register = \"Register\",\r\n    Login = \"Login\",\r\n    Logout = \"Logout\"\r\n}\r\n\r\nexport class AuthAction {\r\n    type: AuthActionType;\r\n    payload?: string\r\n}\r\n\r\nexport function registerAction(token: string): AuthAction {\r\n    return { type: AuthActionType.Register, payload: token };\r\n}\r\nexport function loginAction(token: string): AuthAction {\r\n    return { type: AuthActionType.Login, payload: token };\r\n}\r\nexport function logoutAction(): AuthAction {\r\n    return { type: AuthActionType.Logout };\r\n}\r\n\r\nexport function authReducer(currentAuthState: AuthState = new AuthState(), action: AuthAction): AuthState {\r\n\r\n    const newAuthState = { ...currentAuthState };\r\n\r\n    switch(action.type) {\r\n\r\n        case AuthActionType.Register: \r\n        case AuthActionType.Login:\r\n            newAuthState.token = action.payload;\r\n            const decodedData = jwtDecode(newAuthState.token); \r\n            newAuthState.user = (decodedData as any).user; \r\n            localStorage.setItem(\"token\", newAuthState.token);\r\n            break;\r\n\r\n        case AuthActionType.Logout:\r\n            newAuthState.token = null;\r\n            newAuthState.user = null;\r\n            localStorage.removeItem(\"token\");\r\n            break;       \r\n\r\n    }\r\n\r\n    return newAuthState;\r\n}"]},"metadata":{},"sourceType":"module"}