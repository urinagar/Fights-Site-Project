{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\web development\\\\Lessons + Homework\\\\Third Project\\\\Fullstack\\\\Frontend\\\\src\\\\Components\\\\AuthArea\\\\Register\\\\Register.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyfService\";\nimport \"./Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  var _formState$errors$fir, _formState$errors$las, _formState$errors$use, _formState$errors$pas;\n\n  const navigator = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n\n  async function submit(user) {\n    try {\n      user.role = \"\";\n      await authService.register(user);\n      notifyService.success(\"Registered Successfully\");\n      navigator(\"/home\");\n    } catch (err) {\n      notifyService.error(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Let the journey begin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(submit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstName\",\n            ...register(\"firstName\", {\n              required: {\n                value: true,\n                message: \"Missing first name\"\n              },\n              validate: {\n                value: firstName => firstName.trim().length !== 0 || \"Please enter username\"\n              },\n              minLength: {\n                value: 3,\n                message: \"First name must be minimum 3 chars\"\n              },\n              maxLength: {\n                value: 50,\n                message: \" First name can't exceed 50 chars\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_formState$errors$fir = formState.errors.firstName) === null || _formState$errors$fir === void 0 ? void 0 : _formState$errors$fir.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastName\",\n            ...register(\"lastName\", {\n              required: {\n                value: true,\n                message: \"Missing last name\"\n              },\n              validate: {\n                value: lastName => lastName.trim().length !== 0 || \"Please enter username\"\n              },\n              minLength: {\n                value: 3,\n                message: \"Last name must be minimum 3 chars\"\n              },\n              maxLength: {\n                value: 50,\n                message: \" Last name can't exceed 50 chars\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_formState$errors$las = formState.errors.lastName) === null || _formState$errors$las === void 0 ? void 0 : _formState$errors$las.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            ...register(\"username\", {\n              required: {\n                value: true,\n                message: \"Missing username\"\n              },\n              validate: {\n                value: username => username.trim().length !== 0 || \"Please enter username\"\n              },\n              minLength: {\n                value: 3,\n                message: \"Username must be minimum 3 chars\"\n              },\n              maxLength: {\n                value: 50,\n                message: \" Username can't exceed 50 chars\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_formState$errors$use = formState.errors.username) === null || _formState$errors$use === void 0 ? void 0 : _formState$errors$use.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            ...register(\"password\", {\n              required: {\n                value: true,\n                message: \"Missing passowrd\"\n              },\n              validate: {\n                value: password => password.trim().length !== 0 || \"Please enter username\"\n              },\n              minLength: {\n                value: 3,\n                message: \"Password must be minimum 3 chars\"\n              },\n              maxLength: {\n                value: 20,\n                message: \" Password can't exceed 20 chars\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_formState$errors$pas = formState.errors.password) === null || _formState$errors$pas === void 0 ? void 0 : _formState$errors$pas.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          className: \"BtnGroup\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"warning\",\n            type: \"reset\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"M3t1Gsfv2o2z4VhF/CF63phoW0k=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/user/Desktop/web development/Lessons + Homework/Third Project/Fullstack/Frontend/src/Components/AuthArea/Register/Register.tsx"],"names":["Button","ButtonGroup","useForm","useNavigate","authService","notifyService","Register","navigator","register","handleSubmit","formState","submit","user","role","success","err","error","required","value","message","validate","firstName","trim","length","minLength","maxLength","errors","lastName","username","password"],"mappings":"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","sourcesContent":["import { Button, ButtonGroup } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserModel from \"../../../Models/UserModel\";\nimport authService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyfService\";\nimport \"./Register.css\";\n\nfunction Register(): JSX.Element {\n    const navigator = useNavigate()\n    const {register, handleSubmit, formState} = useForm<UserModel>();\n\n    async function submit(user: UserModel){\n        try{\n            user.role = \"\"\n            await authService.register(user);\n            notifyService.success(\"Registered Successfully\");\n            navigator(\"/home\");\n        }\n        catch(err: any){\n            notifyService.error(err);\n        }\n    }\n\n    return (\n        <div className=\"Register\">\n            <div>\n                <header>\n                    <h1>Let the journey begin</h1>\n                </header>\n                <form onSubmit={handleSubmit(submit)}>\n                    <div className=\"inputContainer\">\n                        <label >First Name</label>\n                        <input type=\"text\" name=\"firstName\" {...register(\"firstName\", {\n                        required: { value: true, message: \"Missing first name\" },\n                        validate: {value: firstName => firstName.trim().length !== 0 || \"Please enter username\"},                            \n                        minLength: { value: 3, message: \"First name must be minimum 3 chars\" },\n                        maxLength: { value: 50, message: \" First name can't exceed 50 chars\" }\n                        })}/>\n                    <span>{formState.errors.firstName?.message}</span>\n\n                    </div>\n                    <div className=\"inputContainer\">\n                        <label >Last Name</label>\n                        <input type=\"text\" name=\"lastName\" {...register(\"lastName\", {\n                        required: { value: true, message: \"Missing last name\" },\n                        validate: {value: lastName => lastName.trim().length !== 0 || \"Please enter username\"},                            \n                        minLength: { value: 3, message: \"Last name must be minimum 3 chars\" },\n                        maxLength: { value: 50, message: \" Last name can't exceed 50 chars\" }\n                        })}/>\n                    <span>{formState.errors.lastName?.message}</span>\n\n                    </div>\n                    <div className=\"inputContainer\">\n                        <label >Username</label>\n                        <input type=\"text\" name=\"username\" {...register(\"username\", {\n                        required: { value: true, message: \"Missing username\" },\n                        validate: {value: username => username.trim().length !== 0 || \"Please enter username\"},                            \n                        minLength: { value: 3, message: \"Username must be minimum 3 chars\" },\n                        maxLength: { value: 50, message: \" Username can't exceed 50 chars\" }\n                        })}/>\n                    <span>{formState.errors.username?.message}</span>\n\n                    </div>\n                    <div className=\"inputContainer\" >\n                        <label >Password</label>\n                        <input type=\"password\" name=\"password\" {...register(\"password\", {\n                        required: { value: true, message: \"Missing passowrd\" },\n                        validate: {value: password => password.trim().length !== 0 || \"Please enter username\"},                            \n                        minLength: { value: 3, message: \"Password must be minimum 3 chars\" },\n                        maxLength: { value: 20, message: \" Password can't exceed 20 chars\" }\n                        })}/>\n                    <span>{formState.errors.password?.message}</span>\n\n                    </div>\n                    <ButtonGroup className=\"BtnGroup\">\n                        <Button variant=\"contained\" color=\"warning\" type=\"reset\">Clear</Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">Register</Button>\n                    </ButtonGroup>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}