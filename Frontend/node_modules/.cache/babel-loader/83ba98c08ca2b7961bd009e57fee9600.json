{"ast":null,"code":"import _classCallCheck from\"C:/Users/user/Desktop/web development/Lessons + Homework/Third Project/Fullstack/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/user/Desktop/web development/Lessons + Homework/Third Project/Fullstack/Frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{authStore}from'./../Redux/Store';import axios from\"axios\";var InterceptorsService=/*#__PURE__*/function(){function InterceptorsService(){_classCallCheck(this,InterceptorsService);}_createClass(InterceptorsService,[{key:\"createInterceptors\",value:function createInterceptors(){axios.interceptors.request.use(function(request){if(authStore.getState().token){request.headers={authorization:\"Bearer \"+authStore.getState().token};}return request;});}}]);return InterceptorsService;}();var interceptorsService=new InterceptorsService();export default interceptorsService;","map":{"version":3,"sources":["C:/Users/user/Desktop/web development/Lessons + Homework/Third Project/Fullstack/Frontend/src/Services/InterceptorsService.ts"],"names":["authStore","axios","InterceptorsService","interceptors","request","use","getState","token","headers","authorization","interceptorsService"],"mappings":"4VAAA,OAASA,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,mB,qKAEF,6BAAkC,CAE9BD,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,SAACD,OAAD,CAAW,CAEtC,GAAGJ,SAAS,CAACM,QAAV,GAAqBC,KAAxB,CAA+B,CAE3BH,OAAO,CAACI,OAAR,CAAkB,CACdC,aAAa,CAAE,UAAYT,SAAS,CAACM,QAAV,GAAqBC,KADlC,CAAlB,CAGH,CAED,MAAOH,CAAAA,OAAP,CACH,CAVD,EAWH,C,mCAGL,GAAMM,CAAAA,mBAAmB,CAAG,GAAIR,CAAAA,mBAAJ,EAA5B,CAEA,cAAeQ,CAAAA,mBAAf","sourcesContent":["import { authStore } from './../Redux/Store';\r\nimport axios from \"axios\";\r\n\r\nclass InterceptorsService {\r\n\r\n    public createInterceptors(): void {\r\n\r\n        axios.interceptors.request.use((request)=>{\r\n\r\n            if(authStore.getState().token) {\r\n\r\n                request.headers = {\r\n                    authorization: \"Bearer \" + authStore.getState().token\r\n                };\r\n            }\r\n\r\n            return request;\r\n        });\r\n    }\r\n}\r\n\r\nconst interceptorsService = new InterceptorsService();\r\n\r\nexport default interceptorsService;\r\n\r\n"]},"metadata":{},"sourceType":"module"}