{"ast":null,"code":"import { Notyf } from \"notyf\";\n\nclass NotifyService {\n  constructor() {\n    this.notification = new Notyf({\n      duration: 4000,\n      position: {\n        x: \"center\",\n        y: \"top\"\n      },\n      ripple: true\n    });\n  }\n\n  success(message) {\n    this.notification.success(message);\n  }\n\n  error(err) {\n    const message = this.getError(err);\n    this.notification.error(message);\n  }\n\n  getError(err) {\n    var _err$response, _err$response2;\n\n    if (typeof err === \"string\") return err;\n    if (typeof ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) === \"string\") return err.response.data;\n    if (Array.isArray((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data)) return err.response.data[0];\n    if (typeof err.message === \"string\") return err.message;\n    return \"Some error, please try again.\";\n  }\n\n}\n\nconst notifyService = new NotifyService();\nexport default notifyService;","map":{"version":3,"sources":["C:/Users/user/Desktop/web development/Lessons + Homework/Third Project/Fullstack/Frontend/src/Services/NotifyfService.ts"],"names":["Notyf","NotifyService","notification","duration","position","x","y","ripple","success","message","error","err","getError","response","data","Array","isArray","notifyService"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;;AAGA,MAAMC,aAAN,CAAoB;AAAA;AAAA,SAERC,YAFQ,GAEO,IAAIF,KAAJ,CAAU;AAAEG,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,CAAC,EAAE,QAAJ;AAAcC,QAAAA,CAAC,EAAE;AAAjB,OAA5B;AAAoDC,MAAAA,MAAM,EAAE;AAA5D,KAAV,CAFP;AAAA;;AAITC,EAAAA,OAAO,CAACC,OAAD,EAAwB;AAClC,SAAKP,YAAL,CAAkBM,OAAlB,CAA0BC,OAA1B;AACH;;AAEMC,EAAAA,KAAK,CAACC,GAAD,EAAiB;AACzB,UAAMF,OAAO,GAAG,KAAKG,QAAL,CAAcD,GAAd,CAAhB;AACA,SAAKT,YAAL,CAAkBQ,KAAlB,CAAwBD,OAAxB;AACH;;AAEOG,EAAAA,QAAQ,CAACD,GAAD,EAAmB;AAAA;;AAE/B,QAAG,OAAOA,GAAP,KAAe,QAAlB,EAA4B,OAAOA,GAAP;AAE5B,QAAG,yBAAOA,GAAG,CAACE,QAAX,kDAAO,cAAcC,IAArB,MAA8B,QAAjC,EAA2C,OAAOH,GAAG,CAACE,QAAJ,CAAaC,IAApB;AAE3C,QAAGC,KAAK,CAACC,OAAN,mBAAcL,GAAG,CAACE,QAAlB,mDAAc,eAAcC,IAA5B,CAAH,EAAsC,OAAOH,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkB,CAAlB,CAAP;AAEtC,QAAG,OAAOH,GAAG,CAACF,OAAX,KAAuB,QAA1B,EAAoC,OAAOE,GAAG,CAACF,OAAX;AAEpC,WAAO,+BAAP;AACH;;AAxBe;;AA2BpB,MAAMQ,aAAa,GAAG,IAAIhB,aAAJ,EAAtB;AAEA,eAAegB,aAAf","sourcesContent":["import { Notyf } from \"notyf\";\r\n\r\n\r\nclass NotifyService {\r\n\r\n    private notification = new Notyf({ duration: 4000, position: {x: \"center\", y: \"top\"},ripple: true });\r\n\r\n    public success(message: string): void {\r\n        this.notification.success(message);\r\n    }\r\n\r\n    public error(err: any): void {\r\n        const message = this.getError(err);\r\n        this.notification.error(message);\r\n    }\r\n\r\n    private getError(err: any): string {\r\n\r\n        if(typeof err === \"string\") return err;\r\n\r\n        if(typeof err.response?.data === \"string\") return err.response.data;\r\n\r\n        if(Array.isArray(err.response?.data)) return err.response.data[0]; \r\n\r\n        if(typeof err.message === \"string\") return err.message;\r\n\r\n        return \"Some error, please try again.\";\r\n    }\r\n}\r\n\r\nconst notifyService = new NotifyService();\r\n\r\nexport default notifyService;"]},"metadata":{},"sourceType":"module"}